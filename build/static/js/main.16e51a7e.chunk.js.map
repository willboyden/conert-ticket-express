{"version":3,"sources":["components/maMap.js","components/eventCalendar.js","components/EventFinder.js","components/Home.js","components/Technology.js","components/CommingSoon.js","components/Contact.js","serviceWorker.js","index.js","App.js"],"names":["MaMap","props","fetcher","a","fetch","then","response","json","domain","console","log","dte","dateClicked","useState","apiUrl","setApiUrl","useEffect","useSWR","data","error","datums","Map","center","zoom","TileLayer","url","attribution","minZoom","maxZoom","id","accessToken","col","x","dataSource","filter","latitude","longitude","map","datum","i","Marker","key","position","lat","lng","onMouseOver","e","target","openPopup","onMouseOut","closePopup","onClick","action","Circle","name","fillColor","color","radius","fillOpacity","Popup","EventCalendar","venueData","setVenueData","showDetail","setShowDetail","venue","res","toString","date","title","extendedProps","minCost","maxCost","defaultView","plugins","dayGridPlugin","interactionPlugin","events","eventRender","event","el","content","ReactDOM","render","dateClick","arg","onDateClick","dateStr","customButtons","btnDetails","text","click","header","left","right","EventFinder","setVenue","dateParam","setDateParam","className","Home","Technology","style","marginLeft","textAlign","CommingSoon","href","Boolean","window","location","hostname","match","sidenavWidth","SetSidenavWidth","mainMarginLeft","SetMainMrginLeft","navClick","routes","routeResult","useRoutes","width","cursor","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.16e51a7e.chunk.js","sourcesContent":["import useSWR from \"swr\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Map, Marker, Popup, TileLayer, Circle } from \"react-leaflet\";\r\n\r\n// import { Icon, Circle } from \"leaflet\";\r\n\r\nexport default function MaMap(props) {\r\n  //leaving this here for now, would be nice to move any data fetching out of rendering functions if possible\r\n\r\n  const fetcher = async (...args) =>\r\n    fetch(...args).then(async response => response.json());\r\n  const domain = \"http://52.2.126.232/api/\";\r\n  const endpoint = \"cityVenues/\";\r\n  //const apiUrl = domain + endpoint;\r\n  console.log();\r\n\r\n  //allow for click on calendar to show only venues with events on that day\r\n  const dte = typeof props.dateClicked == \"string\" ? props.dateClicked : \"\";\r\n  const [apiUrl, setApiUrl] = useState(domain + endpoint + dte);\r\n  useEffect(() => {\r\n    if (props) {\r\n      return async () => setApiUrl(domain + endpoint + dte);\r\n    }\r\n  }, [props]); //use effect when there is change to this var\r\n\r\n  const { data, error } = useSWR(apiUrl, fetcher);\r\n\r\n  const datums = data && !error ? data : [];\r\n  if (error) return <div>failed to load</div>;\r\n  if (!data)\r\n    //Set Label to Loading and empty map without data\r\n    return (\r\n      <div>\r\n        <h5>Loading Geographical Venue Data ...</h5>\r\n        <Map center={[41.98, -71.3824]} zoom={8}>\r\n          <TileLayer\r\n            url=\"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}\"\r\n            attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>'\r\n            minZoom={1}\r\n            maxZoom={18}\r\n            id=\"mapbox/streets-v11\"\r\n            accessToken=\"pk.eyJ1Ijoid2lsbGJveWRlbiIsImEiOiJjazVvdzA4cmEwMDVxM21xbzNiNGxyMGRvIn0.wZFONFwh4vNyRCjkViUg4w\"\r\n          />\r\n        </Map>\r\n      </div>\r\n    );\r\n\r\n  const col = x => {\r\n    if (x.dataSource == \"ticketmaster\") {\r\n      return \"RoyalBlue\";\r\n    } else if (x.dataSource == \"stubhub\") {\r\n      return \"DarkOrange\";\r\n    } else {\r\n      return \"purple\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Map center={[41.98, -71.3824]} zoom={8}>\r\n      <TileLayer\r\n        url=\"https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token={accessToken}\"\r\n        attribution='Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, <a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, Imagery Â© <a href=\"https://www.mapbox.com/\">Mapbox</a>'\r\n        minZoom={1}\r\n        maxZoom={18}\r\n        id=\"mapbox/streets-v11\"\r\n        accessToken=\"pk.eyJ1Ijoid2lsbGJveWRlbiIsImEiOiJjazVvdzA4cmEwMDVxM21xbzNiNGxyMGRvIn0.wZFONFwh4vNyRCjkViUg4w\"\r\n      />\r\n\r\n      {datums\r\n        .filter(x => x.latitude != null && x.longitude != null)\r\n        .map((datum, i) => (\r\n          <Marker\r\n            key={i}\r\n            position={{ lat: datum.latitude, lng: datum.longitude }}\r\n            onMouseOver={e => {\r\n              e.target.openPopup();\r\n            }}\r\n            onMouseOut={e => {\r\n              e.target.closePopup();\r\n            }}\r\n            onClick={() => {\r\n              props.action(datum);\r\n            }}\r\n          >\r\n            <Circle\r\n              key={datum.name}\r\n              center={[datum.latitude, datum.longitude]}\r\n              fillColor={col(datum)}\r\n              color={col(datum)}\r\n              radius={500}\r\n              fillOpacity={0.5}\r\n            />\r\n            <Popup>\r\n              <span>\r\n                {datum.name}\r\n                <br />\r\n                {datum.dataSource}\r\n              </span>\r\n            </Popup>\r\n          </Marker>\r\n        ))}\r\n    </Map>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../App.css\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport interactionPlugin from \"@fullcalendar/interaction\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport default function EventCalendar(props) {\r\n  const [venueData, setVenueData] = useState({});\r\n  const [showDetail, setShowDetail] = useState(false);\r\n\r\n  const col = x => {\r\n    if (x.dataSource == \"ticketmaster\") {\r\n      return \"RoyalBlue\";\r\n    } else if (x.dataSource == \"stubhub\") {\r\n      return \"DarkOrange\";\r\n    } else {\r\n      return \"purple\";\r\n    }\r\n  };\r\n\r\n  const EventDetail = ({ event, el }) => {\r\n    const minCost = event.extendedProps.minCost\r\n      ? event.extendedProps.minCost\r\n      : \"Missing\";\r\n    const maxCost = event.extendedProps.maxCost\r\n      ? event.extendedProps.maxCost\r\n      : \"Missing\";\r\n    const content = (\r\n      <div>\r\n        <b>{event.title}</b>\r\n        <div>\r\n          Min Cost:<b>{minCost}</b>\r\n          Max Cost:<b>{maxCost}</b>\r\n        </div>\r\n      </div>\r\n    );\r\n    if (showDetail === true) {\r\n      ReactDOM.render(content, el);\r\n    } else {\r\n      //tooltip, for now would rather have events not expand calendar\r\n      // const contentTooltip = (\r\n      //   <div style={{ overflow: \"hidden\" }}>\r\n      //     <ReactTooltip id={event.id + \"toolTip\"}>{content}</ReactTooltip>\r\n      //     <div>\r\n      //       <p data-tip={content} data-for={event.id + \"toolTip\"}>\r\n      //         {event.title}\r\n      //       </p>\r\n      //     </div>\r\n      //   </div>\r\n      // );\r\n      // console.log(el);\r\n      // ReactDOM.render(contentTooltip, el);\r\n    }\r\n    return el;\r\n  };\r\n\r\n  const handleDateClick = arg => {\r\n    // alert(arg.dateStr);\r\n    props.onDateClick(arg.dateStr);\r\n  };\r\n\r\n  let venueName = () => {\r\n    return props.venue.name ? props.venue.name : \"Big Night Live\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props) {\r\n      // console.log(props);\r\n      fetch(\r\n        `http://52.2.126.232/api/events/${\r\n          props.venue.name ? props.venue.name : \"Big Night Live\"\r\n        }/`\r\n      )\r\n        .then(async response => response.json())\r\n        .then(async res => {\r\n          setVenueData(\r\n            await res.map((x, i) => ({\r\n              id: x[\"Event Name\"] + i.toString(),\r\n              date: x[\"Event Date\"],\r\n              title: x[\"Event Name\"],\r\n              color: col(x),\r\n              extendedProps: {\r\n                dataSource: x[\"dataSource\"],\r\n                minCost: x[\"Min Cost\"],\r\n                maxCost: x[\"Max Cost\"]\r\n              }\r\n            }))\r\n          );\r\n        });\r\n      // console.log(venueData);\r\n    }\r\n  }, [props, showDetail]); //use effect when there is change to this var\r\n\r\n  // const btnText =\r\n  //   showDetail == true ? \"Minimize Event Details\" : \"Show Full Event Details\";\r\n  return (\r\n    <div>\r\n      <FullCalendar\r\n        defaultView=\"dayGridMonth\"\r\n        plugins={[dayGridPlugin, interactionPlugin]}\r\n        events={venueData}\r\n        eventRender={EventDetail}\r\n        dateClick={handleDateClick}\r\n        customButtons={{\r\n          btnDetails: {\r\n            text: \"Event Details\",\r\n            click: () => {\r\n              showDetail === true ? setShowDetail(false) : setShowDetail(true);\r\n              //myCustomButton.text = btnText;\r\n            }\r\n          }\r\n        }}\r\n        header={{\r\n          left: \"prev,next today btnDetails\",\r\n          center: \"title\",\r\n          right: \"dayGridMonth,timeGridWeek,timeGridDay,listWeek\"\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport MaMap from \"./maMap\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport EventCalender from \"./eventCalendar\";\r\n//import \"./main.scss\"; // webpack must be configured to do this\r\n\r\nexport default function EventFinder() {\r\n  //1 react hook with method to set data and var to hold data\r\n  const [venue, setVenue] = useState({\r\n    name: \"Big Night Live\",\r\n    dataSource: \"ticketmaster\"\r\n  });\r\n\r\n  const [dateParam, setDateParam] = useState({});\r\n\r\n  return (\r\n    <div className=\"col-12\">\r\n      <div className=\"row\">\r\n        <div className=\"col-9\">\r\n          <h3 id=\"pageTitle\">\r\n            <span id=\"venueCount\"></span>\r\n            Venues with Events Listed in Massachusetts\r\n          </h3>\r\n          <button id=\"btnResetTblCityCounts\">Reset Map</button>\r\n          <button id=\"btnStubhubFilter\">Stub Hub</button>\r\n          <button id=\"btnTicketMasterFilter\">Ticket Master</button>\r\n        </div>\r\n        <div className=\"col-3\"></div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-9\">\r\n          {/* 2 pass \"data setter\" to child of this component / sibling of component being effected by event  */}\r\n          <MaMap\r\n            action={venue => setVenue(venue)}\r\n            dateClicked={dateParam}\r\n          ></MaMap>\r\n        </div>\r\n        <div className=\"col-3\"></div>\r\n      </div>\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-9\">\r\n          {/* 3 use data in child component */}\r\n          <EventCalender\r\n            venue={venue}\r\n            onDateClick={dateParam => setDateParam(dateParam)}\r\n          />\r\n        </div>\r\n        <div className=\"col-3\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n  return <div></div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Technology() {\r\n  return (\r\n    <div>\r\n      <body className=\"c6\">\r\n        <p className=\"c8 c10\">\r\n          <span className=\"c0\"></span>\r\n        </p>\r\n        <p className=\"c8\">\r\n          <h2 className=\"c7 c4\">Data Collection</h2>\r\n        </p>\r\n        <ul className=\"c3 lst-kix_gyzx9pg5k5m-0 start\">\r\n          <li className=\"c2\">\r\n            <span className=\"c0\">\r\n              (local) C# .Net Core Console Applications run on a scheduled\r\n              routine calling Python and T-SQL scripts\r\n            </span>\r\n          </li>\r\n\r\n          <li className=\"c2\">\r\n            <span>\r\n              Python scripts to pull data from third party APIs, do some light\r\n              data wrangling and save the data as json documents in a structured\r\n              directory system{\" \"}\r\n            </span>\r\n            <span className=\"c0\">&nbsp;</span>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"c3 lst-kix_gyzx9pg5k5m-1 start\">\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">Console apps run python scripts</span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">\r\n              C# extracts, wrangles and formats data with T-SQL scripts saving\r\n              to local MSSQL Server DB\r\n            </span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">\r\n              Update cloud data with latest pull (cloud can only host small\r\n              subset of data being collected)\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <i>\r\n          <p style={{ marginLeft: \"2rem\", textAlign: \"left\" }}>--Notes:</p>\r\n          <ul\r\n            style={{ marginLeft: \"4rem\", textAlign: \"left\" }}\r\n            className=\"c3 lst-kix_xap17x11oy16-0 start\"\r\n          >\r\n            <li className=\"c2\">\r\n              <span className=\"c0\">\r\n                eventually the python parts should be re-written in C# so there\r\n                is less to manage(like python versions, environment ect). Or C#\r\n                should be rewritten in python\r\n              </span>\r\n            </li>\r\n            <li className=\"c2\">\r\n              <span className=\"c0\">\r\n                All technologies (other than windows task scheduler) can be run\r\n                on both Windows and Linux including .Net Core and SQL Server (on\r\n                most popular linux distrabutions){\" \"}\r\n              </span>\r\n            </li>\r\n            <li className=\"c2\">\r\n              <span className=\"c0\">\r\n                Had I known this would end up being a primarily Node.js and\r\n                MySQL (eventually MongoDB) project I would have used those for\r\n                data collection\r\n              </span>\r\n            </li>\r\n          </ul>\r\n        </i>\r\n\r\n        <p className=\"c8\">\r\n          <h2>Web Stack</h2>\r\n        </p>\r\n        <p className=\"c8\">\r\n          <span className=\"c7 c4\">\r\n            &nbsp; &nbsp; <b>Past</b>{\" \"}\r\n          </span>\r\n        </p>\r\n        <p className=\"c8\">\r\n          <span className=\"c4\">\r\n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n          </span>\r\n          <span className=\"c0\">\r\n            Windows, IIS, SQL Server, .Net Core WebAPI, .NET Core MVC, jQuery +\r\n            other JS libs\r\n          </span>\r\n        </p>\r\n        <p className=\"c8\">\r\n          <span>&nbsp; &nbsp; </span>\r\n          <span className=\"c7 c4\">\r\n            <b>Current</b>\r\n          </span>\r\n        </p>\r\n\r\n        <p style={{ marginLeft: \"1rem\", textAlign: \"left\" }}>\r\n          <span className=\"c0\">\r\n            Git for version control and moving project from local windows\r\n            development environment to linux cloud hosting environment\r\n          </span>\r\n        </p>\r\n        <p style={{ marginLeft: \"1rem\", textAlign: \"left\" }}>\r\n          <span>\r\n            (OS and such) Linux running on AWS cloud with Apache Http Server\r\n          </span>\r\n        </p>\r\n\r\n        <ul className=\"c3 lst-kix_x9qnrmiz1czb-0\">\r\n          <h6>that Backend </h6>\r\n        </ul>\r\n\r\n        <ul className=\"c3 lst-kix_x9qnrmiz1czb-1 start\">\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">\r\n              AWS RDS MySQLversion8 (finally a MySQL allowing for C.T.E.s !!!!)\r\n            </span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">NodeJS </span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">Express - for creating REST APIs</span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c1\">Coming Soon-</span>\r\n            <span className=\"c0\">\r\n              &nbsp;MongoDB, Redis (for speed I think my entire DB could be\r\n              saved in RAM with Redis, though rewriting queries will be a pain)\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <ul className=\"c3 lst-kix_x9qnrmiz1czb-0\">\r\n          <h6>Frontside </h6>\r\n        </ul>\r\n        <ul className=\"c3 lst-kix_x9qnrmiz1czb-1 start\">\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">\r\n              React.JS for responsive user interaction and clean reusable code\r\n              base\r\n            </span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">\r\n              D3.js for Data Visualization with low level control\r\n            </span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">\r\n              Leaflet.JS (React version) for geographical data visualization and\r\n              interaction\r\n            </span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">\r\n              Full-Calendar.JS (React version) for timeseries data visualization\r\n              and interaction\r\n            </span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">\r\n              Bootstrap for layout and to save time in general with styling\r\n            </span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">CSS cause well duh you gots to &nbsp;</span>\r\n          </li>\r\n          <li className=\"c5\">\r\n            <span className=\"c0\">\r\n              React Pivot Tables for Plotly Charts and well duhâ¦ pivot tables\r\n            </span>\r\n          </li>\r\n        </ul>\r\n        <p className=\"c8 c9\">\r\n          <span className=\"c0\"></span>\r\n        </p>\r\n      </body>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function CommingSoon() {\r\n  return <div></div>;\r\n}\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-10\">\r\n        <h2>Contact</h2>\r\n        <p style={{ textAlign: \"left\" }}>\r\n          Hello, <br />\r\n          My name is William Boyden.\r\n          <br />\r\n          Im a full stack web developer specializing in data analysis and\r\n          visualization. <br />\r\n          If you would like to in contact please reach me via\r\n          <a href=\"linkedin.com/in/william-boyden-88a324b6\"> LinkedIn</a>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from \"react\";\nimport MaMap from \"./components/maMap\";\nimport { useRoutes, A } from \"hookrouter\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./StyleSheets/navBar.css\";\nimport EventFinder from \"./components/EventFinder\";\nimport EventCalendar from \"./components/eventCalendar\";\nimport Home from \"./components/Home\";\nimport Technology from \"./components/Technology\";\nimport CommingSoon from \"./components/CommingSoon\";\nimport Contact from \"./components/Contact\";\n//import \"./main.scss\"; // webpack must be configured to do this\n\nexport default function App() {\n  //1 react hook with method to set data and var to hold data\n  const [venue, setVenue] = useState({\n    name: \"Big Night Live\",\n    dataSource: \"ticketmaster\"\n  });\n\n  const [dateParam, setDateParam] = useState({});\n  const [sidenavWidth, SetSidenavWidth] = useState(\"250px\");\n  const [mainMarginLeft, SetMainMrginLeft] = useState(\"250px\");\n\n  function openNav() {\n    SetSidenavWidth(\"250px\");\n    SetMainMrginLeft(\"250px\");\n  }\n  function closeNav() {\n    SetSidenavWidth(\"0px\");\n    SetMainMrginLeft(\"0px\");\n  }\n\n  function navClick() {\n    console.log(\"clicked\");\n    sidenavWidth == \"250px\" ? closeNav() : openNav();\n  }\n\n  const routes = {\n    \"/\": () => <Home />,\n    \"/eventfinder\": () => <EventFinder />,\n    \"/eventcalendar\": () => <EventCalendar venue={venue} />,\n    \"/venuemap\": () => <MaMap />,\n    \"/technology\": () => <Technology />,\n    \"/contact\": () => <Contact />,\n    \"/comingsoon\": () => <CommingSoon />\n  };\n  const routeResult = useRoutes(routes);\n  return (\n    <div>\n      <div id=\"mySidenav\" className=\"sidenav\" style={{ width: sidenavWidth }}>\n        <a className=\"closebtn\" onClick={navClick}>\n          &times;\n        </a>\n        <A href=\"/\">Home</A>\n        <A href=\"/eventfinder\">Event Finder</A>\n        <A href=\"/eventcalendar\">Event Calendar</A>\n        <A href=\"/venuemap\">Venue Map</A>\n        <A href=\"/technology\">Technology</A>\n        <A href=\"/contact\">Contact</A>\n        <A href=\"/commingsoon\">Comming Soon</A>\n      </div>\n\n      <div\n        id=\"main\"\n        className=\"container\"\n        style={{ marginLeft: mainMarginLeft }}\n      >\n        <span style={{ cursor: \"pointer\" }} onClick={navClick}>\n          &#9776;\n        </span>\n        <div className=\"row\">{routeResult}</div>\n      </div>\n    </div>\n  );\n}\n"],"sourceRoot":""}