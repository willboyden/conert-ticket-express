module.exports.GetSpecificStubhubVenueSummary = (venueName) => {
    // Code here
    return (
 `         SELECT ve.name as \`Event Name\`  
                            , eventDate as \`Event Date\`   
                            , minListPrice \`Min Cost\`  
                            , maxListPrice \`Max Cost\`   
                           FROM tblNewStubhubVenueEvent ve   
                            LEFT JOIN tblStubhubVenue v  on ve.venue_id = v.id   
                           WHERE eventDate is not null    
                               AND  ${venueName ? `v.name = '${venueName}' order by eventDate` : "1=1" } 
                               `);
}



module.exports.GetSpecificTicketmasterVenueEventSummary = (venueName) => {
    // Code here
    return (
        `      
                   with ve as   
                                           (  
                                               SELECT  
                                                \`venue_id\` 
                                               , \`genre_name\`  
                                               , \`name\` as \`Event\`  
                                               , \`priceRanges_max\` as \`maxTicketCost\`  
                                               , \`priceRanges_min\` as \`minTicketCost\` 
                                               , CAST(\`dates_start_dateTime\` as DATE) as \`Event Date\`  
                                                FROM tblNewTicketmasterVenueEvent ve  
                                               -- filter to only include results from nost recent scrape 
                                                
                                           ) 
                                           SELECT  
                                           ve.\`Event\` as \`Event Name\`  
                                           , ve.\`Event Date\`  
                                           , ve.\`genre_name\` as \`Genre\`  
                                           , ve.\`maxTicketCost\` as \`Min Cost\`  
                                           , ve.\`minTicketCost\` as \`Max Cost\`  
                                           FROM ve   
                                            LEFT JOIN tblTicketmasterVenue v   
                                               ON v.id = ve.venue_id 
                                            WHERE  ${venueName ? `v.name = '${venueName}' order by eventDate` : "1=1" } 
                                            GROUP BY   
                                               ve.\`Event\`
                                               , ve.\`Event Date\`  
                                               , ve.\`genre_name\` 
                                               , ve.\`maxTicketCost\` 
                                               , ve.\`minTicketCost\` 
                                                ORDER BY  
                                                ve.\`Event Date\` 
                                              , ve.\`Event\`   
                                              `
    );}

    //hmm mssql server has an INCLUDE_NULL_VALUES clause when returning json. How is that handled in this senario???
    module.exports.GetCityVenues = (includeNulls) => {
        // Code here
        return (
        `      
            WITH a as (
                SELECT 
                      v.\`name\`
                    , v.\`city\`  
                    , c.\`latitude\`
                    , c.\`longitude\`
                    , 'stubhub' as dataSource
                FROM \`tblStubhubVenue\` v                          
                LEFT JOIN \`tblStubHubCity\` c
                    ON v.city=c.city
                WHERE id in(
                    select distinct(venue_id)  from \`tblNewStubhubVenueEvent\`
                )

                    UNION 
                
                SELECT
                    \`name\`
                    ,\`city\`
                    ,\`latitude\`
                    ,\`longitude\`
                    , 'ticketmaster' as dataSource
                FROM \`tblTicketmasterVenue\`
                WHERE id in(
                    select distinct venue_id   from \`tblNewTicketmasterVenueEvent\`
                )

            )
            , b as (

                select \`name\`
                , count(1) as duplicate
                , min(dataSource) as dataSource 
                from a 
                group by \`name\`

            ), multiple as (
                select 
                     a.\`name\`
                    ,a.\`city\`
                    ,a.\`latitude\`
                    ,a.\`longitude\`
                    , case duplicate when 2 Then 'multiple' ELSE b.dataSource end as dSource 
                from b 
                left join a on a.\`name\` = b.\`name\`
            )
            select \`name\`
            , min(city) as city
            , min(latitude) as latitude
            , min(longitude) as longitude
            , min(dSource) as dataSource
            from multiple
            WHERE dSource = 'multiple'
            GROUP BY \`name\`
            UNION
            select * from multiple 
            WHERE dSource != 'multiple'
            AND \`name\` NOT LIKE  '%Parking Lots' 
        `
        );  
    }


    module.exports.GetSpecificStubhubVenueSummary = (venueName) => {
            return(
                `
                    WITH ve as 
                        (
                            SELECT
                            \`venue_id\`
                            , \`genre_name\`
                            , \`name\` as \`Event\`
                            , \`priceRanges_max\` as \`maxTicketCost\`
                            , \`priceRanges_min\` as \`minTicketCost\`
                            , CAST( \`dates_start_dateTime\` AS DATE) as \`Event Date\` 
                            FROM tblNewTicketMasterVenueEvent ve
                        )
                    SELECT 
                        ve.\`Event\` as \`Event Name\`
                        , ve.\`Event Date\`
                        -- , ve.\`genre_name\` as \`Genre\`
                        , ve.\`maxTicketCost\` as \`Min Cost\`
                        , ve.\`minTicketCost\` as \`Max Cost\`
                        , 'ticketmaster' as dataSource
                    FROM ve
                    LEFT JOIN tblTicketmasterVenue v 
                        ON v.id = ve.venue_id
                    WHERE ve.genre_name is not null
                        ${venueName ? "AND \`name\` = '" + venueName + "'": ""} 
                    GROUP BY
                        ve.\`Event\`
                        , ve.\`Event Date\`
                        , ve.\`genre_name\`
                        , ve.\`maxTicketCost\`
                        , ve.\`minTicketCost\`
                        
                            UNION
        
                    SELECT 
                    ve.\`name\` \`Event Name\`
                    , ve.eventDate \`Event Date\`
                    , ve.\`minListPrice\` \`Min Cost\`
                    , ve.\`maxListPrice\` \`Max Cost\`
                    , 'stubhub' as dataSource
                    FROM \`tblNewStubhubVenueEvent\` ve
                    LEFT JOIN \`tblStubhubVenue\` v
                    on ve.venue_id = v.id
                    WHERE  eventDate is not null
                        ${venueName ? "AND v.\`name\` = '" + venueName + "'": ""} 
                    order by \`Event Date\`   
                `   
            );        
    }
    

    exports.GetSpecificVenueSummary = function getVenueSummary(params) {
        let result = "";
        if (params.dataSource == "stubhub"){ result = GetSpecificStubhubVenueSummary(params.venueName); }
        else if (params.dataSource == "ticketmaster"){ result = GetSpecificTicketmasterVenueEventSummary(params.venueName); }
        else
        {
            // result = $"[{GetSpecificStubhubVenueSummary(venue)}, {GetSpecificTicketmasterVenueEventSummary(venue)}]";
            result = GetSpecificVenueEventSummary(params.venueName);
        }
        return(result);
    };

    function selectedStubhubVenueEvent(venueName) {
        venueName = venueName ? " and \`name\` = '" + venueName + "'": ""
        return(
            `
                SELECT 
                    \`name\`
                    ,\`status\`
                    ,\`minListPrice\`
                    ,\`maxListPrice\`
                    ,\`totalTickets\`
                    ,\`totalListings\`
                FROM \`tblNewStubhubVenueEvent\`
                WHERE venue_id in (
                    SELECT id from tblStubhubVenue 
                    WHERE  \`name\` not like '%Parking Lot%'
                    ${venueName}
                    )
            ` 
        );        
    };
    module.exports.selectedStubhubVenueEvent;
    function selectedTicketmasterVenueEvent(venueName) {
        venueName = venueName ? " and \`name\` = '" + venueName + "'": ""
        return(
            `
                        SELECT 
                        \`name\`
                        ,\`segment_name\`
                        ,\`genre_name\`
                        ,\`subGenre_name\`
                        ,\`priceRanges_min\`
                        ,\`priceRanges_max\`
                        ,\`id\`
                        ,\`venue_id\`
                    FROM \`tblNewTicketMasterVenueEvent\`
                    WHERE \`venue_id\` in (
                        SELECT \`id\` from tblTicketmasterVenue 
                        WHERE  \`name\` not like '%Parking Lot%' 
                 ${venueName})
            ` 
        );        
    };
    module.exports.selectedTicketmasterVenueEvent;
    
    module.exports.GetSpecificVenue = function getVenueSummary(params) {
        var result = "";
        if (params.dataSource == "stubhub"){ result = selectedStubhubVenueEvent(params.venueName); }
        else if (params.dataSource == "ticketmaster"){ result = selectedTicketmasterVenueEvent(params.venueName); }
        else { result = [selectedStubhubVenueEvent(params.venueName), selectedTicketmasterVenueEvent(params.venueName)]; }
        return(result);
    };

    //works
    module.exports.GetSpecificStubhubVenueSummary = (venue) => {
        venue = venue ? " where \`name\` = '" + venue + "' LIMIT 1": ""
        return(
            `
                WITH a as (
                    SELECT
                        \`name\`
                        ,\`postalCode\`
                        ,\`city\`
                        ,\`state\`
                        ,\`address1\`
                        ,\`address2\`
                    FROM \`tblTicketmasterVenue\`

                        UNION

                    SELECT
                        \`name\`
                        ,\`postalCode\`
                        ,\`city\`
                        ,\`state\`
                        ,\`address1\`
                        ,\`address2\`
                    FROM \`tblStubhubVenue\`
                )
                select
                    \`name\`
                    ,\`postalCode\`
                    ,\`city\`
                    ,\`state\`
                    ,\`address1\`
                    ,\`address2\` from a
            ` + venue
        );        
    }
    


  